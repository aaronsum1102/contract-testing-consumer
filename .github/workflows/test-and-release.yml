name: test-and-release

on:
  push:
  pull_request:
    types:
      - closed

env:
  PACT_BROKER_BASE_URL: ${{secrets.PACT_BROKER_BASE_URL}}
  PACT_BROKER_TOKEN: ${{secrets.PACT_BROKER_TOKEN}}

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          JSON=$(jq -c . < ./pacticipant-matrix.json)
          echo $JSON
          echo "::set-output name=matrix::$JSON"

  test:
    needs: setup-matrix
    if: ${{ github.event.pull_request.state != 'closed'}}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.setup-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Test
        run: yarn test --ci
      - name: Publish contract
        run: >
          yarn pact-broker publish pacts 
          -b $PACT_BROKER_BASE_URL 
          -k $PACT_BROKER_TOKEN 
          -a ${{ github.sha }} 
          -t ${{ github.ref }}
      - name: Can i deploy to dev?
        uses: ./.github/actions/can-i-deploy
        with:
          stage: dev
          version: ${{ github.sha }}
          pacticipant: ${{ matrix.pacticipant }}

  tag-contract:
    needs: setup-matrix
    if: ${{ github.event.pull_request.state == 'closed'}}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.setup-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Tagging contract
        uses: ./.github/actions/release
        with:
          stage: dev
          version: ${{ github.event.pull_request.head.sha }}
          pacticipant: ${{ matrix.pacticipant }}

  dev:
    needs: test
    if: ${{ github.ref == 'refs/heads/master' }}
    name: Deploy to dev
    environment:
      name: dev
    strategy:
      matrix: ${{fromJSON(needs.setup-matrix.outputs.matrix)}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - uses: ./.github/actions/release
        with:
          stage: dev
          version: ${{ github.sha }}
          pacticipant: ${{ matrix.pacticipant }}

  staging:
    needs: dev
    name: Deploy to staging
    environment:
      name: staging
    strategy:
      matrix: ${{fromJSON(needs.setup-matrix.outputs.matrix)}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - uses: ./.github/actions/release
        with:
          stage: staging
          version: ${{ github.sha }}
          pacticipant: ${{ matrix.pacticipant }}

  prod:
    needs: staging
    name: Deploy to prod
    environment:
      name: production
    strategy:
      matrix: ${{fromJSON(needs.setup-matrix.outputs.matrix)}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - uses: ./.github/actions/release
        with:
          stage: production
          version: ${{ github.sha }}
          pacticipant: ${{ matrix.pacticipant }}
